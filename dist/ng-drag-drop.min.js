!function(){"use strict";angular.module("ui.sortable",[]).constant("sortableConfig",{itemClass:"sortable-item",handleClass:"sortable-handle",placeHolderClass:"sortable-placeholder",dragClass:"sortable-drag"})}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.factory("$helper",["$document","$window",function($document,$window){return{height:function(element){return element.prop("scrollHeight")},width:function(element){return element.prop("scrollWidth")},offset:function(element){var boundingClientRect=element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),top:boundingClientRect.top+($window.pageYOffset||$document[0].documentElement.scrollTop),left:boundingClientRect.left+($window.pageXOffset||$document[0].documentElement.scrollLeft)}},eventObj:function(e){var obj=e;return void 0!==e.targetTouches?obj=e.targetTouches.item(0):void 0!==e.originalEvent&&void 0!==e.originalEvent.targetTouches&&(obj=e.originalEvent.targetTouches.item(0)),obj},positionStarted:function(e,target){var pos={};return pos.offsetX=e.pageX-this.offset(target).left,pos.offsetY=e.pageY-this.offset(target).top,pos.startX=pos.lastX=e.pageX,pos.startY=pos.lastY=e.pageY,pos.nowX=pos.nowY=pos.distX=pos.distY=pos.dirAx=0,pos.dirX=pos.dirY=pos.lastDirX=pos.lastDirY=pos.distAxX=pos.distAxY=0,pos},movePosition:function(e,target,pos){target.css({left:e.pageX-pos.offsetX+"px",top:e.pageY-pos.offsetY+"px"})},dragItem:function(item){return{index:item.index(),parent:item.sortableScope,source:item,sourceInfo:{index:item.index(),itemScope:item.itemScope,sortableScope:item.sortableScope},moveTo:function(parent,index){this.parent=parent,this.isSameParent()&&this.source.index()<index&&index--,this.index=index},isSameParent:function(){return this.parent.element==this.sourceInfo.sortableScope.element},isOrderChanged:function(){return this.index!=this.sourceInfo.index},eventArgs:function(){return{source:this.sourceInfo,dest:{index:this.index,sortableScope:this.parent}}},apply:function(){this.sourceInfo.sortableScope.removeItem(this.sourceInfo.index),this.parent.insertItem(this.index,this.source.modelValue)}}},noDrag:function(targetElm){return"undefined"!=typeof targetElm.attr("nodrag")||"undefined"!=typeof targetElm.attr("data-nodrag")}}}])}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableController",["$scope",function($scope){this.scope=$scope,$scope.modelValue=null,$scope.callbacks=null,$scope.type="sortable",$scope.insertItem=function(index,itemData){$scope.safeApply(function(){$scope.modelValue.splice(index,0,itemData)})},$scope.removeItem=function(index){var removedItem=null;return index>-1&&$scope.safeApply(function(){removedItem=$scope.modelValue.splice(index,1)[0]}),removedItem},$scope.isEmpty=function(){return $scope.modelValue&&0===$scope.modelValue.length},$scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)}}]),mainModule.directive("sortable",function(){return{require:"ngModel",restrict:"A",scope:!0,controller:"sortableController",link:function(scope,element,attrs,ngModelController){var ngModel=ngModelController;if(ngModel){ngModel.$render=function(){ngModel.$modelValue&&angular.isArray(ngModel.$modelValue)||ngModel.$setViewValue([]),scope.modelValue=ngModel.$modelValue},scope.element=element;var callbacks={accept:null,orderChanged:null,itemMoved:null,dragStart:null,dragStop:null};callbacks.accept=function(){return!0},callbacks.orderChanged=function(){},callbacks.itemMoved=function(){},callbacks.dragStart=function(){console.log("drag started..")},callbacks.dragStop=function(){console.log("drag ended..")},scope.$watch(attrs.sortable,function(newVal){angular.forEach(newVal,function(value,key){callbacks[key]&&"function"==typeof value&&(callbacks[key]=value)}),scope.callbacks=callbacks},!0)}}}})}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableItemHandleController",["$scope",function($scope){this.scope=$scope,$scope.itemScope=null,$scope.type="handle"}]),mainModule.directive("sortableItemHandle",["sortableConfig","$helper","$window","$document",function(sortableConfig,$helper,$window,$document){return{require:"^sortableItem",scope:!0,restrict:"A",controller:"sortableItemHandleController",link:function(scope,element,attrs,itemController){var dragElement,placeHolder,placeElement,position,dragItemInfo,hasTouch="ontouchstart"in $window;sortableConfig.handleClass&&element.addClass(sortableConfig.handleClass),scope.itemScope=itemController.scope;var dragStart=function(event){var clickedElm=angular.element(event.target),source=clickedElm.scope();if(source&&source.type&&"handle"==source.type){for(;clickedElm&&clickedElm[0]&&clickedElm[0]!=element;){if($helper.noDrag(clickedElm))return;clickedElm=clickedElm.parent()}event.preventDefault();var eventObj=$helper.eventObj(event);dragItemInfo=$helper.dragItem(scope);var tagName=scope.itemScope.element.prop("tagName");dragElement=angular.element($window.document.createElement(scope.sortableScope.element.prop("tagName"))).addClass(scope.sortableScope.element.attr("class")).addClass(sortableConfig.dragClass),dragElement.css("width",$helper.width(scope.itemScope.element)+"px"),placeHolder=angular.element($window.document.createElement(tagName)).addClass(sortableConfig.placeHolderClass),placeHolder.css("height",$helper.height(scope.itemScope.element)+"px"),placeElement=angular.element($window.document.createElement(tagName)),position=$helper.positionStarted(eventObj,scope.itemScope.element),scope.itemScope.element.after(placeHolder),scope.itemScope.element.after(placeElement),dragElement.append(scope.itemScope.element),$document.find("body").append(dragElement),$helper.movePosition(eventObj,dragElement,position),scope.sortableScope.$apply(function(){scope.callbacks.dragStart(dragItemInfo.eventArgs())}),bindEvents()}},dragMove=function(event){if(dragElement){event.preventDefault();var eventObj=$helper.eventObj(event);$helper.movePosition(eventObj,dragElement,position);var targetX=eventObj.pageX-$window.document.documentElement.scrollLeft,targetY=eventObj.pageY-($window.pageYOffset||$window.document.documentElement.scrollTop);$window.document.elementFromPoint(targetX,targetY);var targetElm=angular.element($window.document.elementFromPoint(targetX,targetY)),target=targetElm.scope(),isEmpty=!1;if("sortable"==target.type&&(isEmpty=target.isEmpty()),"handle"==target.type&&(target=target.itemScope),"item"!=target.type&&!isEmpty)return;isEmpty?(target.element.append(placeHolder),dragItemInfo.moveTo(target,0)):(targetElm=target.element,target.accept(scope,target.sortableScope)&&(isMovingUpwards(eventObj,targetElm)?(targetElm[0].parentNode.insertBefore(placeHolder[0],targetElm[0]),dragItemInfo.moveTo(target.sortableScope,target.index())):(targetElm.after(placeHolder),dragItemInfo.moveTo(target.sortableScope,target.index()+1))))}},isMovingUpwards=function(eventObj,targetElm){var movingUpwards=!1,targetOffset=$helper.offset(targetElm);return movingUpwards=$helper.offset(placeHolder).top>targetOffset.top?$helper.offset(dragElement).top<targetOffset.top+$helper.height(targetElm)/2:eventObj.pageY<targetOffset.top},dragEnd=function(event){dragElement&&(event&&event.preventDefault(),placeElement.replaceWith(scope.itemScope.element),placeHolder.remove(),dragElement.remove(),dragElement=null,dragItemInfo.apply(),scope.sortableScope.$apply(function(){dragItemInfo.isSameParent()?dragItemInfo.isOrderChanged()&&scope.callbacks.orderChanged(dragItemInfo.eventArgs()):scope.callbacks.itemMoved(dragItemInfo.eventArgs())}),scope.sortableScope.$apply(function(){scope.callbacks.dragStop(dragItemInfo.eventArgs())}),dragItemInfo=null),unBindEvents()};hasTouch?element.bind("touchstart",dragStart):element.bind("mousedown",dragStart),angular.element($window.document.body).bind("keydown",function(event){27==event.keyCode&&dragEnd(event)});var bindEvents=function(){hasTouch?(angular.element($document).bind("touchmove",dragMove),angular.element($document).bind("touchend",dragEnd),angular.element($document).bind("touchcancel",dragEnd)):(angular.element($document).bind("mousemove",dragMove),angular.element($document).bind("mouseup",dragEnd),angular.element($window.document.body).bind("mouseleave",dragEnd))},unBindEvents=function(){hasTouch?(angular.element($document).unbind("touchend",dragEnd),angular.element($document).unbind("touchcancel",dragEnd),angular.element($document).unbind("touchmove",dragMove)):(angular.element($document).unbind("mouseup",dragEnd),angular.element($document).unbind("mousemove",dragMove),angular.element($window.document.body).unbind("mouseleave",dragEnd))}}}}])}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableItemController",["$scope",function($scope){this.scope=$scope,$scope.sortableScope=null,$scope.modelValue=null,$scope.type="item",$scope.index=function(){return $scope.sortableScope.modelValue.indexOf($scope.modelValue)},$scope.itemData=function(){return $scope.sortableScope.modelValue[$scope.$index]},$scope.accept=function(sourceItemScope,destScope){return $scope.callbacks.accept(sourceItemScope.itemData(),sourceItemScope,destScope)}}]),mainModule.directive("sortableItem",["sortableConfig",function(sortableConfig){return{require:"^sortable",restrict:"A",controller:"sortableItemController",link:function(scope,element,attrs,sortableController){sortableConfig.itemClass&&element.addClass(sortableConfig.itemClass),scope.sortableScope=sortableController.scope,scope.modelValue=sortableController.scope.modelValue[scope.$index],scope.element=element}}}])}();