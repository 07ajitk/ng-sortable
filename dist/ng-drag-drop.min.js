!function(){"use strict";angular.module("ui.sortable",[]).constant("sortableConfig",{itemClass:"sortable-item",handleClass:"sortable-handle",placeHolderClass:"sortable-placeholder",dragClass:"sortable-drag"})}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.factory("$helper",["$document","$window",function($document,$window){return{height:function(element){return element.prop("scrollHeight")},width:function(element){return element.prop("scrollWidth")},offset:function(element){var boundingClientRect=element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),top:boundingClientRect.top+($window.pageYOffset||$document[0].documentElement.scrollTop),left:boundingClientRect.left+($window.pageXOffset||$document[0].documentElement.scrollLeft)}},positionStarted:function(e,target){var pos={};return pos.offsetX=e.pageX-this.offset(target).left,pos.offsetY=e.pageY-this.offset(target).top,pos.startX=pos.lastX=e.pageX,pos.startY=pos.lastY=e.pageY,pos.nowX=pos.nowY=pos.distX=pos.distY=pos.dirAx=0,pos.dirX=pos.dirY=pos.lastDirX=pos.lastDirY=pos.distAxX=pos.distAxY=0,pos},positionMoved:function(e,pos,firstMoving){pos.lastX=pos.nowX,pos.lastY=pos.nowY,pos.nowX=e.pageX,pos.nowY=e.pageY,pos.distX=pos.nowX-pos.lastX,pos.distY=pos.nowY-pos.lastY,pos.lastDirX=pos.dirX,pos.lastDirY=pos.dirY,pos.dirX=0===pos.distX?0:pos.distX>0?1:-1,pos.dirY=0===pos.distY?0:pos.distY>0?1:-1;var newAx=Math.abs(pos.distX)>Math.abs(pos.distY)?1:0;return firstMoving?(pos.dirAx=newAx,void(pos.moving=!0)):(pos.dirAx!==newAx?(pos.distAxX=0,pos.distAxY=0):(pos.distAxX+=Math.abs(pos.distX),0!==pos.dirX&&pos.dirX!==pos.lastDirX&&(pos.distAxX=0),pos.distAxY+=Math.abs(pos.distY),0!==pos.dirY&&pos.dirY!==pos.lastDirY&&(pos.distAxY=0)),void(pos.dirAx=newAx))},dragItem:function(item){return{index:item.index(),parent:item.sortableScope,source:item,sourceInfo:{index:item.index(),itemScope:item.itemScope,sortableScope:item.sortableScope},moveTo:function(parent,index){this.parent=parent,this.isSameParent()&&this.source.index()<index&&index--,this.index=index},isSameParent:function(){return this.parent.element==this.sourceInfo.sortableScope.element},isOrderChanged:function(){return this.index!=this.sourceInfo.index},eventArgs:function(){return{source:this.sourceInfo,dest:{index:this.index,sortableScope:this.parent}}},apply:function(){this.sourceInfo.sortableScope.removeItem(this.sourceInfo.index),this.parent.insertItem(this.index,this.source.modelValue)}}},noDrag:function(targetElm){return"undefined"!=typeof targetElm.attr("nodrag")||"undefined"!=typeof targetElm.attr("data-nodrag")}}}])}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableController",["$scope",function($scope){this.scope=$scope,$scope.modelValue=null,$scope.callbacks=null,$scope.type="sortable",$scope.insertItem=function(index,itemData){$scope.safeApply(function(){$scope.modelValue.splice(index,0,itemData)})},$scope.removeItem=function(index){var removedItem=null;return index>-1&&$scope.safeApply(function(){removedItem=$scope.modelValue.splice(index,1)[0]}),removedItem},$scope.isEmpty=function(){return $scope.modelValue&&0===$scope.modelValue.length},$scope.safeApply=function(fn){var phase=this.$root.$$phase;"$apply"==phase||"$digest"==phase?fn&&"function"==typeof fn&&fn():this.$apply(fn)}}]),mainModule.directive("sortable",function(){return{require:"ngModel",restrict:"A",scope:!0,controller:"sortableController",link:function(scope,element,attrs,ngModelController){var callbacks={accept:null,orderChanged:null,itemMoved:null,dragStart:null,dragMove:null,dragStop:null},ngModel=ngModelController;ngModel&&(ngModel.$render=function(){ngModel.$modelValue&&angular.isArray(ngModel.$modelValue)||ngModel.$setViewValue([]),scope.modelValue=ngModel.$modelValue},scope.element=element,callbacks.accept=function(){return!0},callbacks.orderChanged=function(){},callbacks.itemMoved=function(){},callbacks.dragStart=function(){},callbacks.dragMove=function(){},callbacks.dragStop=function(){},scope.$watch(attrs.sortable,function(newVal){angular.forEach(newVal,function(value,key){callbacks[key]&&"function"==typeof value&&(callbacks[key]=value)}),scope.callbacks=callbacks},!0))}}})}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableItemHandleController",["$scope",function($scope){this.scope=$scope,$scope.itemScope=null,$scope.type="handle"}]),mainModule.directive("sortableItemHandle",["sortableConfig","$helper","$window","$document",function(sortableConfig,$helper,$window,$document){return{require:"^sortableItem",scope:!0,restrict:"A",controller:"sortableItemHandleController",link:function(scope,element,attrs,itemController){var placeElm,hiddenPlaceElm,dragElm,pos,firstMoving,dragInfo,hasTouch="ontouchstart"in window;sortableConfig.handleClass&&element.addClass(sortableConfig.handleClass),scope.itemScope=itemController.scope;var dragStart=function(event){var clickedElm=angular.element(event.target),source=clickedElm.scope();if(source&&source.type&&"handle"==source.type){for(;clickedElm&&clickedElm[0]&&clickedElm[0]!==element;){if($helper.noDrag(clickedElm))return;clickedElm=clickedElm.parent()}event.preventDefault(),dragInfo=$helper.dragItem(scope),firstMoving=!0;var tagName=scope.itemScope.element.prop("tagName");placeElm=angular.element($window.document.createElement(tagName)).addClass(sortableConfig.placeHolderClass),hiddenPlaceElm=angular.element($window.document.createElement(tagName)),pos=$helper.positionStarted(event,scope.itemScope.element),placeElm.css("height",$helper.height(scope.itemScope.element)+"px"),dragElm=angular.element($window.document.createElement(scope.sortableScope.element.prop("tagName"))).addClass(scope.sortableScope.element.attr("class")).addClass(sortableConfig.dragClass),dragElm.css("width",$helper.width(scope.itemScope.element)+"px"),scope.itemScope.element.after(placeElm),scope.itemScope.element.after(hiddenPlaceElm),dragElm.append(scope.itemScope.element),angular.element($window.document.body).bind("mouseleave",dragEnd),$document.find("body").append(dragElm),dragElm.css({left:event.pageX-pos.offsetX+"px",top:event.pageY-pos.offsetY+"px"}),scope.$apply(function(){scope.callbacks.dragStart(dragInfo.eventArgs())}),hasTouch?(angular.element($document).bind("touchmove",dragMove),angular.element($document).bind("touchend",dragEnd),angular.element($document).bind("touchcancel",dragEnd)):(angular.element($document).bind("mousemove",dragMove),angular.element($document).bind("mouseup",dragEnd))}},dragMove=function(event){if(dragElm){if(event.preventDefault(),dragElm.css({left:event.pageX-pos.offsetX+"px",top:event.pageY-pos.offsetY+"px"}),$helper.positionMoved(event,pos,firstMoving),firstMoving)return void(firstMoving=!1);var targetX=event.pageX-$window.document.documentElement.scrollLeft,targetY=event.pageY-(window.pageYOffset||$window.document.documentElement.scrollTop);$window.document.elementFromPoint(targetX,targetY);var targetElm=angular.element($window.document.elementFromPoint(targetX,targetY));if(!pos.dirAx){var target=targetElm.scope(),isEmpty=!1,targetBefore=!1;if("sortable"==target.type&&(isEmpty=target.isEmpty()),"handle"==target.type&&(target=target.itemScope),"item"!=target.type&&!isEmpty)return;if(isEmpty)target.element.append(placeElm),dragInfo.moveTo(target,0);else{targetElm=target.element;var targetOffset=$helper.offset(targetElm);targetBefore=$helper.offset(placeElm).top>targetOffset.top?$helper.offset(dragElm).top<targetOffset.top+$helper.height(targetElm)/2:event.pageY<targetOffset.top,target.accept(scope,target.sortableScope)&&(targetBefore?(targetElm[0].parentNode.insertBefore(placeElm[0],targetElm[0]),dragInfo.moveTo(target.sortableScope,target.index())):(targetElm.after(placeElm),dragInfo.moveTo(target.sortableScope,target.index()+1)))}}scope.$apply(function(){scope.callbacks.dragMove(dragInfo.eventArgs())})}},dragEnd=function(event){scope.$$apply=!0,dragElm&&(event&&event.preventDefault(),hiddenPlaceElm.replaceWith(scope.itemScope.element),placeElm.remove(),dragElm.remove(),dragElm=null,scope.$$apply&&(dragInfo.apply(),scope.sortableScope.$apply(function(){dragInfo.isSameParent()?dragInfo.isOrderChanged()&&scope.callbacks.orderChanged(dragInfo.eventArgs()):scope.callbacks.itemMoved(dragInfo.eventArgs())})),scope.sortableScope.$apply(function(){scope.callbacks.dragStop(dragInfo.eventArgs())}),scope.$$apply=!1,dragInfo=null),hasTouch?(angular.element($document).unbind("touchend",dragEnd),angular.element($document).unbind("touchcancel",dragEnd),angular.element($document).unbind("touchmove",dragMove)):(angular.element($document).unbind("mouseup",dragEnd),angular.element($document).unbind("mousemove",dragMove),angular.element($window.document.body).unbind("mouseleave",dragEnd))};hasTouch?element.bind("touchstart",dragStart):element.bind("mousedown",dragStart)}}}])}(),function(){"use strict";var mainModule=angular.module("ui.sortable");mainModule.controller("sortableItemController",["$scope",function($scope){this.scope=$scope,$scope.sortableScope=null,$scope.modelValue=null,$scope.type="item",$scope.index=function(){return $scope.sortableScope.modelValue.indexOf($scope.modelValue)},$scope.itemData=function(){return $scope.sortableScope.modelValue[$scope.$index]},$scope.accept=function(sourceItemScope,destScope){return $scope.callbacks.accept(sourceItemScope.itemData(),sourceItemScope,destScope)}}]),mainModule.directive("sortableItem",["sortableConfig",function(sortableConfig){return{require:"^sortable",restrict:"A",controller:"sortableItemController",link:function(scope,element,attrs,sortableController){sortableConfig.itemClass&&element.addClass(sortableConfig.itemClass),scope.sortableScope=sortableController.scope,scope.modelValue=sortableController.scope.modelValue[scope.$index],scope.element=element}}}])}();